<UserControl x:Class="NetChat.Desktop.View.Messenger.ChatSenderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:NetChat.Desktop.ViewModel.Messenger"
             xmlns:controls="clr-namespace:NetChat.Desktop.Controls"
             mc:Ignorable="d" 
             Height="Auto"
             d:DataContext="{d:DesignInstance Type=vm:ChatSenderViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="40" d:DesignWidth="400"
             MinHeight="40">

    <UserControl.Resources>
        <Style x:Key="SendButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="#00000000">
                            <materialDesign:PackIcon Name="SendIcon" Kind="Send" SnapsToDevicePixels="True"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Margin="{TemplateBinding Padding}" Width="Auto" Height="Auto"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="SendIcon" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Foreground" TargetName="SendIcon" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TypingTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{StaticResource ChatSenderTextBoxBackground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="CaretBrush" Value="#7F000000"/>
        </Style>

        <Style x:Key="WatermarkTextBlock" TargetType="{x:Type TextBlock}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5 0 0 0"/>
        </Style>


    </UserControl.Resources>
    
    <Grid>
        <Border Grid.Row="1" 
                Background="{StaticResource ChatSenderBackground}"
                SnapsToDevicePixels="True"
                BorderBrush="{DynamicResource MaterialDesignDivider}" 
                Grid.ColumnSpan="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="50"/>
                </Grid.ColumnDefinitions>

                <!--Message-->
                <Border Margin="10,5,0,5"
                        BorderThickness="1"
                        BorderBrush="{DynamicResource MaterialDesignDivider}">
                    
                    <TextBox x:Name="MessageTxtBox"
                             MinHeight="30" Height="Auto"
                             Text="{Binding TextMessage, UpdateSourceTrigger=PropertyChanged}"
                             Style="{StaticResource TypingTextBox}">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter" Command="{Binding SendMessageCommand}"/>
                        </TextBox.InputBindings>
                        <controls:WatermarkService.Watermark>
                            <TextBlock Text="Write a message..."
                                       Style="{StaticResource WatermarkTextBlock}"/>
                        </controls:WatermarkService.Watermark>
                    </TextBox>
                </Border>

                <!--Send-->
                <Button x:Name="SendButton"
                        Grid.Column="1" Margin="10"
                        Style="{DynamicResource SendButtonStyle}"
                        Command="{Binding SendMessageCommand}"/>
            </Grid>
        </Border>
    </Grid>
</UserControl>
