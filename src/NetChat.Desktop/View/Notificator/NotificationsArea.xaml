<Window x:Class="NetChat.Desktop.View.Notificator.NotificationsArea"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:NetChat.Desktop.ViewModel.Notifications"
        xmlns:converters="clr-namespace:NetChat.Desktop.View.Converters"
        xmlns:v="clr-namespace:NetChat.Desktop.View.Notificator"
        mc:Ignorable="d"
        WindowStartupLocation="Manual"
        SizeToContent="WidthAndHeight"
        ShowInTaskbar="False"
        Topmost="True" Margin="2,5,10,2"
        Background="Transparent" WindowStyle="None" AllowsTransparency="True" ShowActivated="False"
        d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type=vm:NotificationsViewModel}"
        Loaded="Window_Loaded">

    <Window.Resources>
        <converters:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
        <converters:IntVisibilityConverter x:Key="IntVisibilityConverter"/>
        
        <DataTemplate DataType="{x:Type vm:MessageNotification}">
            <v:MessageNotificationView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type vm:ParticipantNotification}">
            <v:ParticipantNotificationView/>
        </DataTemplate>

        <Style x:Key="HideButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle}">
            <Setter Property="Background" Value="{StaticResource NotificationBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource NotificationMessageForeground}"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Margin" Value="0,2"/>
        </Style>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="MouseLeave">
            <i:InvokeCommandAction Command="{Binding StartClosingTimerCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseEnter">
            <i:InvokeCommandAction Command="{Binding StopClosingTimerCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Button
            Content="Hide"
            Style="{StaticResource HideButtonStyle}"
            Command="{Binding HideAllCommand}"
            Visibility="{Binding Notifications.Count, Converter={StaticResource IntVisibilityConverter}, ConverterParameter=1}"/>

        <ItemsControl ItemsSource="{Binding Notifications}" Grid.Row="1">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical">
                        <StackPanel.LayoutTransform>
                            <RotateTransform Angle="180"/>
                        </StackPanel.LayoutTransform>
                    </StackPanel>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemContainerStyle>
                <Style TargetType="{x:Type FrameworkElement}">
                    <Setter Property="LayoutTransform">
                        <Setter.Value>
                            <RotateTransform Angle="180"/>
                        </Setter.Value>
                    </Setter>
                    
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </Grid>
</Window>
