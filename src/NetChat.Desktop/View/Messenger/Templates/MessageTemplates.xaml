<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="clr-namespace:NetChat.Desktop.View.Converters"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:vm="clr-namespace:NetChat.Desktop.ViewModel.Messenger.ChatArea.Messages">

    <conv:BoolVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <Style x:Key="ItemsContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                        <StackPanel 
                                IsItemsHost="True"
                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type vm:ReplyObservable}">
        <Grid Cursor="Hand">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <Rectangle
                Name="Line"
                Width="2" Height="25"
                        Fill="{DynamicResource MajorBrush}"
                        Margin="0,0,5,0" Grid.RowSpan="2"/>

            <TextBlock
                    Name="Author"
                    Grid.Column="1"
                    Text="{Binding AuthorName}"
                    FontWeight="Bold"
                    Foreground="{DynamicResource MajorBrush}"/>

            <TextBlock 
                    Name="Text"
                    Grid.Column="1"
                    Text="{Binding Text}"
                    TextWrapping="NoWrap"
                    TextTrimming="CharacterEllipsis"
                    Grid.Row="1"
                    Foreground="{DynamicResource GrayLightBrush}"/>
        </Grid>
    </DataTemplate>

    <!--<ControlTemplate x:Key="x" TargetType="{x:Type ContentControl}">
        <Grid Cursor="Hand">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Rectangle
                Name="Line"
                Width="2" Height="25"
                        Fill="{TemplateBinding Background}"
                        Margin="0,0,5,0" Grid.RowSpan="2"/>

            <TextBlock
                    Name="Author"
                    Grid.Column="1"
                    Text="{Binding AuthorName}"
                    FontWeight="Bold"
                    Foreground="{TemplateBinding Background}"/>

            <TextBlock 
                    Name="Text"
                    Grid.Column="1"
                    Text="{Binding Text}"
                    TextWrapping="NoWrap"
                    TextTrimming="CharacterEllipsis"
                    Grid.Row="1"
                    Foreground="{TemplateBinding Foreground}"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="DefaultReplyStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{DynamicResource x}"/>
        <Setter Property="Background" Value="{DynamicResource MajorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayLightBrush}"/>
    </Style>
    
    <Style x:Key="OutgoingReplyStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Template" Value="{DynamicResource x}"/>
        <Setter Property="Background" Value="{DynamicResource BlackBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource GrayBrush}"/>
    </Style>-->

    <DataTemplate DataType="{x:Type vm:TextMessageObservable}">

        <Grid x:Name="MessageGrid" Background="Transparent" >
            <Border x:Name="MessageBorder"
                        MinHeight="40" MinWidth="250" BorderThickness="1" 
                        Background="{DynamicResource GrayDarkBrush}"
                        BorderBrush="{DynamicResource GrayDarkBrush}"
                        Margin="10 5 60 5" CornerRadius="4" SnapsToDevicePixels="True"
                        Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                        HorizontalAlignment="Left">

                <Border.ContextMenu>
                    <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}"
                                 Style="{DynamicResource ItemsContextMenu}"
                             Background="{DynamicResource GrayDarkDarkerBrush}" Foreground="{DynamicResource WhiteBrush}">
                        <MenuItem 
                            Header="Reply"
                            Command="{Binding Parent.DataContext.ReplyToMessageCommand, RelativeSource={RelativeSource Self}}"
                            CommandParameter="{Binding Parent.PlacementTarget.DataContext, RelativeSource={RelativeSource Mode=Self}}"/>
                    </ContextMenu>
                </Border.ContextMenu>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    

                    <ContentControl
                        Margin="10,5,0,0"
                        Content="{Binding Reply}"
                        Visibility="{Binding HasReply, Converter={StaticResource BooleanToVisibilityConverter}}">
                        
                        <!--<ContentControl.Style>
                            <Style TargetType="ContentControl" BasedOn="{StaticResource DefaultReplyStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsOutgoing}" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource GrayDarkDarkerBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource GrayDarkBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>-->
                        
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction 
                                    Command="{Binding Path=DataContext.GoToReplyMessageCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}, Mode=FindAncestor}}"
                                    CommandParameter="{Binding ElementName=MessageGrid, Path=DataContext}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ContentControl>

                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="15"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="AuthorTextBlock" Grid.Row="0" Margin="7,5,7,0"
                                   VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                   Text="{Binding AuthorName}"
                                   FontWeight="Bold"
                                   Foreground="{DynamicResource MajorBrush}"/>

                        <TextBlock x:Name="MessageTextBlock" Grid.Row="1" Margin="7,5,7,0"
                                   TextWrapping="Wrap" 
                                   VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                                   Text="{Binding Text}"
                                   Foreground="{DynamicResource WhiteBrush}"/>

                        <TextBlock x:Name="DateTextBlock"
                                    Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                                   Margin="0,0,5,0" FontSize="10" Opacity="0.8"
                                   Text="{Binding DateTime, StringFormat=HH:mm}"
                                   Foreground="{DynamicResource WhiteBrush}"/>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
        
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsOutgoing}" Value="True">
                <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right"/>
                <Setter TargetName="MessageBorder" Property="Margin" Value="60,5,5,5"/>
                <Setter TargetName="MessageBorder" Property="Background" Value="{DynamicResource MajorDarkBrush}"/>
                <Setter TargetName="MessageBorder" Property="BorderBrush" Value="{DynamicResource MajorDarkBrush}"/>
                <Setter TargetName="AuthorTextBlock" Property="Visibility" Value="Collapsed"/>
                <!--<Setter TargetName="MessageTextBlock" Property="Foreground" Value="{DynamicResource BlackBrush}"/>
                <Setter TargetName="DateTextBlock" Property="Foreground" Value="{DynamicResource BlackBrush}"/>-->
            </DataTrigger>
            <DataTrigger Binding="{Binding Text}" Value="{x:Null}">
                <Setter TargetName="MessageTextBlock" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="MessageBorder" Property="MaxWidth" Value="320"/>
            </DataTrigger>
            <EventTrigger RoutedEvent="RequestBringIntoView">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation
                                Storyboard.TargetName="MessageGrid"
                                Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)"
                                To="Gray"
                                FillBehavior="Stop" 
                                Duration="0:0:0.5" AutoReverse="True" RepeatBehavior="2x"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>